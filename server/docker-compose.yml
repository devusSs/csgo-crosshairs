version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: "crosshairs-postgres"
    ports:
      - 127.0.0.1:${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - fullstack
    volumes:
      - database_postgres:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    container_name: "crosshairs-redis"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command:
      redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    ports:
      - 127.0.0.1:${REDIS_PORT}:${REDIS_PORT}
    networks:
      - fullstack
    volumes:
      - database_redis:/var/lib/redis/data

  minio:
    image: minio/minio
    restart: unless-stopped
    container_name: "crosshairs-minio"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address :${MINIO_CONSOLE_PORT} /data
    ports:
      - 127.0.0.1:${MINIO_PORT}:${MINIO_PORT}
      - 127.0.0.1:${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
    networks:
      - fullstack
    volumes:
      - minio_storage:/data

  api:
    build: 
      context: .
      args:
        BUILD_VERSION: ${API_BUILD_VERSION}
        BUILD_MODE: ${API_BUILD_MODE}
    restart: unless-stopped
    container_name: "crosshairs-api"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MINIO_HOST: minio
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      API_HOST: ""
      API_PORT: ${API_PORT}
      DOMAIN: ${DOMAIN}
      SECRET_SESSIONS_KEY: ${SECRET_SESSIONS_KEY}
      EMAIL_FROM: ${EMAIL_FROM}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      USING_REVERSE_PROXY: ${USING_REVERSE_PROXY}
      TWITCH_CLIENT_ID: ${TWITCH_CLIENT_ID}
      TWITCH_CLIENT_SECRET: ${TWITCH_CLIENT_SECRET}
      TWITCH_BOT_USERNAME: ${TWITCH_BOT_USERNAME}
    ports:
      - 127.0.0.1:${API_PORT}:${API_PORT}
    networks:
      - fullstack
    depends_on:
      - postgres
      - redis
      - minio

volumes:
  database_postgres:
  database_redis:
  minio_storage:

networks:
  fullstack:
    driver: bridge